{"version":3,"file":"static/js/266.bf20cfda.chunk.js","mappings":"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","sources":["components/App/TitlePhonebook.styled.js","components/App/Container.styled.js","components/App/ContainerForm.styled.js","components/App/TitleContacts.styled.js","components/Filter/FilterStyled.styled.js","components/Filter/InputFind.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactItem.styled.js","components/ContactList/ListPhone.styled.js","components/ContactList/ButtonDelete.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/Form.styled.js","components/ContactForm/Input.styled.js","components/ContactForm/Button.styled.js","components/ContactForm/ContactForm.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TitlePhonebook = styled.h1`\n  font-family: 'Roboto';\n  font-size: 100px;\n  font-weight: bold;\n  color: #e2e2e2;\n  text-align: center;\n  text-shadow: #120c07 10px 0 5px;\n  margin-bottom: 20px;\n  box-shadow: #ffe724 0px 20px 30px, #ffe724 0px 2px 5px;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  text-align: center;\n`;\n\n","import styled from 'styled-components';\n\nexport const ContainerForm = styled.div`\n  margin-top: 100px;\n`;\n","import styled from 'styled-components';\n\nexport const TitleContacts = styled.h2`\n  font-family: 'Roboto';\n  font-size: 70px;\n  font-weight: bold;\n  color: #e2e2e2;\n  text-align: center;\n  text-shadow: #120c07 10px 0 5px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const FilterStyled = styled.label`\n  display: block;\n  font-family: 'Roboto';\n  font-size: 40px;\n  font-weight: bold;\n  color: #222326;\n  text-align: center;\n  text-shadow: #120c07 2px 0 0;\n  margin-top: 10px;\n  margin-bottom: 30px;\n`;\n","import styled from 'styled-components';\n\nexport const InputFind = styled.input`\n  width: 320px;\n  height: 40px;\n  margin-left: 10px;\n  vertical-align: top;\n  font-size: 20px;\n  font-weight: bold;\n  background-color: #e2e2e2;\n\n  &: hover, focus {\n    box-shadow: #ffe724 0px 10px 20px, #ffe724 0px 2px 5px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FilterStyled } from './FilterStyled.styled';\nimport { InputFind } from './InputFind.styled';\n\nexport const Filter = ({ value, onChange }) => (\n  <FilterStyled>\n    Find contacts by name:\n    <InputFind type=\"text\" value={value} onChange={onChange} />\n  </FilterStyled>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  font-family: 'Roboto';\n  font-size: 35px;\n  font-weight: bold;\n  color: #222326;\n  text-align: center;\n  text-shadow: #120c07 2px 0 1px;\n  margin: 0 auto 5px;\n  list-style: none;\n  display: flex;\n  justify-content: space-between;\n  width: 750px;\n\n  &: hover {\n    box-shadow: #ffe724 0px 10px 10px 0px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ListPhone = styled.span`\n  margin-left: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const ButtonDelete = styled.button`\n  background-color: #ffe724;\n  color: #120c07;\n  font-family: 'Roboto';\n  font-size: 30px;\n  border: none;\n  border-radius: 5px;\n  height: 32px;\n  width: 50px;\n  margin-left: 10px;\n  vertical-align: top;\n  box-shadow: 2px 2px 1px 0px #120c07;\n\n  &: hover {\n    outline-color: transparent;\n    transition: 0.3s;\n    transform: scale(1.03);\n    border: 1px solid #120c07;\n    box-shadow: 10px 10px 5px -5px #120c07;\n    font-weight: bold;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContactItem } from './ContactItem.styled';\nimport { ListPhone } from './ListPhone.styled';\nimport { ButtonDelete } from './ButtonDelete.styled';\n\nexport const ContactList = ({ contacts, onDeleteContact }) => {\n  const showContacts = Array.isArray(contacts) && contacts.length > 0;\n\n  return (\n    <ul>\n      {showContacts &&\n        contacts.map(contact => {\n          return (\n            <ContactItem key={contact.id}>\n              <div>\n                <span>{contact.name}</span>:\n                <ListPhone>{contact.number}</ListPhone>\n              </div>\n              <ButtonDelete\n                aria-label=\"Delete contact\"\n                type=\"button\"\n                onClick={() => onDeleteContact(contact.id)}\n              >\n                &times;\n              </ButtonDelete>\n            </ContactItem>\n          );\n        })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: grid;\n  width: 600px;\n  margin: 0 auto;\n  border: 2px solid #ffe724;\n  border-radius: 4px;\n  box-shadow: #ffe724 5px 0 5px;\n  padding-top: 20px;\n  font-family: 'Roboto';\n  font-size: 40px;\n  font-weight: bold;\n\n  text-align: center;\n  color: #e2e2e2;\n  text-align: center;\n  text-shadow: #120c07 5px 0 1px;\n  position: sticky;\n  top: 50px;\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 550px;\n  height: 25px;\n  margin: 0 auto;\n  font-size: 20px;\n  font-weight: bold;\n  background-color: #e2e2e2;\n\n  &: hover {\n    box-shadow: #ffe724 0px 5px 10px, #ffe724 0px 2px 5px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  background-color: #ffe724;\n  color: #120c07;\n  box-shadow: 5px 5px 2px 0px #120c07;\n  font-family: 'Roboto';\n  font-weight: bold;\n  font-size: 25px;\n  border: none;\n  border-radius: 10px;\n  padding: 15px;\n  max-height: auto;\n  max-width: 200px;\n  margin: 20px auto;\n\n  &: hover {\n    outline-color: transparent;\n    outline-style: solid;\n    box-shadow: 10px 10px 5px 0px #120c07;\n    transition: 0.3s;\n    border: 1px solid #120c07;\n  }\n`;\n","import React from 'react';\nimport { Form } from './Form.styled';\nimport { Input } from './Input.styled';\nimport { Button } from './Button.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactsThunk } from 'redux/contactsOperations';\nimport { selectUserContacts } from 'redux/contactsReducer';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectUserContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n\n    const name = form.elements.contactName.value.trim();\n    const number = form.elements.contactNumber.value.trim();\n\n    if (contacts.some(contact => contact.name === name))\n      return alert(`Contact with name ${name} already exists!`);\n\n    if (contacts.some(contact => contact.number === number))\n      return alert(`Contact with number ${number} already exists!`);\n\n    dispatch(addContactsThunk({ name, number }));\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label>Name: </label>\n      <Input type=\"text\" name=\"contactName\" required />\n\n      <label>Number: </label>\n      <Input type=\"text\" name=\"contactNumber\" required />\n\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import { Loader } from 'components/Loader/Loader';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAuthentificated } from 'redux/authReducer';\nimport {\n  deleteContactsThunk,\n  requestContactsThunk,\n} from 'redux/contactsOperations';\nimport {\n  selectContactsError,\n  selectContactsFilter,\n  selectContactsIsLoading,\n  selectUserContacts,\n  setFilter,\n} from 'redux/contactsReducer';\nimport { Container } from 'components/App/Container.styled';\nimport { ContainerForm } from 'components/App/ContainerForm.styled';\nimport { TitlePhonebook } from 'components/App/TitlePhonebook.styled';\nimport { TitleContacts } from 'components/App/TitleContacts.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\nconst ContactsPage = () => {\n  const authentificated = useSelector(selectAuthentificated);\n  const contacts = useSelector(selectUserContacts);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  const filter = useSelector(selectContactsFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!authentificated) return;\n\n    dispatch(requestContactsThunk());\n  }, [authentificated, dispatch]);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactsThunk(contactId));\n  };\n\n  const changeFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  const findContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = findContacts();\n\n  return (\n    <section>\n      <TitlePhonebook>Phonebook</TitlePhonebook>\n      <Container>\n        <ContainerForm>\n          <ContactForm />\n        </ContainerForm>\n        <div>\n          <TitleContacts>Contacts</TitleContacts>\n          {isLoading && <Loader />}\n          {error && <p>Oops, some error occured...{error}</p>}\n          <Filter value={filter} onChange={changeFilter} />\n          <ContactList\n            contacts={filteredContacts}\n            onDeleteContact={handleDeleteContact}\n          />\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["TitlePhonebook","styled","Container","ContainerForm","TitleContacts","FilterStyled","InputFind","Filter","value","onChange","type","ContactItem","ListPhone","ButtonDelete","ContactList","contacts","onDeleteContact","showContacts","Array","isArray","length","map","contact","name","number","onClick","id","Form","Input","Button","ContactForm","useSelector","selectUserContacts","dispatch","useDispatch","onSubmit","event","preventDefault","form","currentTarget","elements","contactName","trim","contactNumber","some","alert","addContactsThunk","required","authentificated","selectAuthentificated","isLoading","selectContactsIsLoading","error","selectContactsError","filter","selectContactsFilter","useEffect","requestContactsThunk","filteredContacts","normalizedFilter","toLowerCase","includes","findContacts","Loader","setFilter","target","contactId","deleteContactsThunk"],"sourceRoot":""}